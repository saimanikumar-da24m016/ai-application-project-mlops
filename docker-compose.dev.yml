# docker-compose.dev.yml
services:

  ## ── 1️⃣ Airflow Init (DB + Admin User) ────────────────────────────────────
  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-init
    restart: "no"
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      PYTHONPATH: "/opt"
      MLFLOW_TRACKING_URI: "http://mlflow:5000"
    volumes:
      - ./:/opt
      - ./requirements-airflow.txt:/requirements.txt
    entrypoint: >
      bash -c "
        airflow db init &&
        airflow users create --username admin \
          --firstname Admin --lastname User \
          --role Admin --email admin@example.org \
          --password admin || true
      "

  ## ── 2️⃣ Airflow Webserver ────────────────────────────────────────────────
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-web
    restart: always
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      PYTHONPATH: "/opt"
      MLFLOW_TRACKING_URI: "http://mlflow:5000"
    volumes:
      - ./:/opt
      - ./requirements-airflow.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: bash -c "airflow webserver"

  ## ── 3️⃣ Airflow Scheduler ───────────────────────────────────────────────
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-sched
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      PYTHONPATH: "/opt"
      MLFLOW_TRACKING_URI: "http://mlflow:5000"
    volumes:
      - ./:/opt
      - ./requirements-airflow.txt:/requirements.txt
    command: bash -c "airflow scheduler"

  ## ── 4️⃣ MLflow Tracking Server ──────────────────────────────────────────
  mlflow:
    build: ./mlflow-server
    container_name: mlflow
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - mlruns:/app/mlruns

    ## ── 5️⃣ MLflow Model-Serving API ────────────────────────────────────────
  mlflow-model-server:
    build:
      context: ./mlflow-model-server
      dockerfile: Dockerfile
    container_name: mlflow-model-server
    restart: always
    volumes:
      - mlruns:/app/mlruns   # mount the same mlruns so it can read artifacts
    ports:
      - "1234:1234"
    depends_on:
      - mlflow


volumes:
  mlruns:
